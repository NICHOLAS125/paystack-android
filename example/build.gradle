apply plugin: 'com.android.application'

Properties secrets = new Properties()
try {
    secrets.load(file('secrets.properties').newDataInputStream())
} catch(IOException e) {
    def message = "Could not load secrets.properties file. Check that it exists. You can copy and rename secrets_example.properties"
    throw new IOException(message, e)
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "co.paystack.example"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField("String", "PAYSTACK_PUBLIC_KEY", "\"${secrets.getProperty("paystack.publicKey")}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13-beta-2'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation 'org.robolectric:robolectric:4.3-alpha-2'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    implementation project(':paystack')
//    implementation "co.paystack.android:paystack:$rootProject.ext.versionName"
}
